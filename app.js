// Generated by CoffeeScript 1.3.3
var DEBUG, app, createHash, crypto, env, express, generateMongoUrl, getParserByUrl, hosts, loadParser, loadParserByUrl, mongo, mongourl, parsers, url;

express = require('express');

url = require('url');

crypto = require('crypto');

app = express();

parsers = require("./parsers");

hosts = require('./hosts');

DEBUG = true;

if (process.env.VCAP_SERVICES) {
  env = JSON.parse(process.env.VCAP_SERVICES);
  mongo = env['mongodb-1.8'][0]['credentials'];
} else {
  mongo = {
    "hostname": "localhost",
    "port": 27017,
    "username": "",
    "password": "",
    "name": "",
    "db": "db"
  };
}

generateMongoUrl = function(_object) {
  _object.hostname = _object.hostname || 'localhost';
  _object.port = _object.port || 27017;
  _object.db = _object.db || 'test';
  if (_object.username && _object.password) {
    return "mongodb://" + _object.username + ":" + _object.password + "@" + _object.hostname + ":" + _object.port + "/" + _object.db;
  } else {
    return "mongodb://" + _object.hostname + ":" + _object.port + "/" + _object.db;
  }
};

mongourl = generateMongoUrl(mongo);

getParserByUrl = function(_url) {
  var host, parserType;
  parserType = 'default';
  host = url.parse(_url).pathname.replace("/", "").replace("www.", "");
  if (hosts[host] != null) {
    parserType = hosts[host];
  }
  return parserType;
};

loadParserByUrl = function(_url) {
  var parserType;
  parserType = getParserByUrl;
  return loadParser(parserType);
};

loadParser = function(_parser) {
  if (parsers[_parser]) {
    return new parsers[parserType]();
  } else {
    return null;
  }
};

createHash = function(_url, _parserType) {
  var hash;
  hash = crypto.createHash('md5');
  return hash.update(_url + _parserType).digest('hex');
};

app.use(express.bodyParser());

app.get("/", function(request, response) {
  return response.sendfile("html/home.html");
});

app.post("/", function(request, response) {
  var parserType, rss;
  rss = request.param('rss');
  parserType = getParserByUrl(rss);
  response.send(createHash(rss, parserType));
  return response.end();
});

app.get("/:rss.xml", function(request, response) {
  response.send('load parser here!');
  return response.end();
});

app.listen(process.env.VCAP_APP_PORT || 3000);
